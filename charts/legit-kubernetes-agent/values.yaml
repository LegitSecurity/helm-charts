replicaCount: 1

image:
  broker:
    repository: ghcr.io/legitsecurity/legit-broker
    pullPolicy: IfNotPresent
    tag: "v1.3"
  proxy:
    repository: ghcr.io/legitsecurity/legit-kubectl-proxy
    pullPolicy: IfNotPresent
    tag: "1.0.2"

agent:
  # -- REQUIRED: Agent identifier acquired from the Legit platform
  identifier: ""
  endpoint: "https://app.legitsecurity.co/broker"
  # -- If the agent needs a proxy to access the Legit app, set it here (e.g http://example.com)
  # proxy: ""

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

resources:
  broker:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  proxy:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "512Mi"
      cpu: "500m"

podSecurityContext: {}
securityContext: {}
podAnnotations: {}
nodeSelector: {}
tolerations: {}
affinity: {}

# If you're using a self signed certificate you'll need to set this as true and also create a secret named ca-cert-secret
# with the value ca.crt as the ca certificate encoded in base64 or if you want the chart to create the secret for you
# you can add selfSigned.caCertBase64 and it will create a secret for you
selfSigned:
  enabled: false
  caCertBase64: ""